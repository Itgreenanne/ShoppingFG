<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Debug" internalLogFile="d:\temp\nlog-internal.log">

  <targets>
	  <!--<target name="myLoggerTarget" xsi:type="File"
			 fileName="${basedir}/log/${shortdate}/${logger}.txt"
			 layout="${counter} | ${date} | 來源:${callsite} | 行數:${callsite-linenumber} | ${level:uppercase=true} | ${logger:shortName=true} 
              | ${message} ${newline}" encoding="utf-8"/>-->
	  <!--<target name="myDbLogger" xsi:type="Database" connectionStringName="shoppingBG" dbDatabase="ShoppingBG">
		  <commandText>insert into t_logTest(f_dataId, f_type, f_function) VALUES (@dataId, @type, @function);</commandText>
		  <parameter name="@dataId" layout="${event-properties:item = dataId}" />
		  <parameter name="@type" layout="${event-properties:item = type}" />
		  <parameter name="@function" layout="${event-properties:item = function}" />
	      <dbProvider>Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient</dbProvider>
	  </target>-->

	  <!--<target name="myLoggerTarget" xsi:type="File"
			fileName="${basedir}/log/${shortdate}/${logger}.txt"
			layout="${counter} | ${date} | 來源:${callsite=} | 行數:${callsite-linenumber} | ${level:uppercase=true} | ${logger:shortName=true} 
              | ${message} ${newline}" encoding="utf-8"/>
	  <target name="myDbLogger" xsi:type="Database" connectionStringName="Data Source=localhost; initial catalog=ShoppingBG;Integrated Security=true;">
		  <dbProvider>System.Data.SqlClient</dbProvider>
		  <commandText> INSERT INTO t_operationRecord(f_dataId, f_type, f_function, f_before, f_after) VALUES (@dataId, @type, @function, @before, @after);</commandText>
		  <parameter name="@dataId" layout="${event-properties:item = dataId}" />
		  <parameter name="@type" layout="${event-properties:item = type}" />
		  <parameter name="@function" layout="${event-properties:item = function}" />
		  <parameter name="@before" layout="${event-properties:item = before}" />
		  <parameter name="@after" layout="${event-properties:item = after}" />
	  </target>-->
	  
	  
	  <!--<target name="file" xsi:type="File"
			 fileName="${basedir}/log/${shortdate}/${logger}.txt"
			 layout="${counter} | ${date} | 來源:${callsite=} | 行數:${callsite-linenumber} | ${level:uppercase=true} | ${logger:shortName=true} 
              | ${message} ${newline}" encoding="utf-8"/>-->

	  <target name="myLoggerTarget" xsi:type="File" fileName="${basedir}/log/${shortdate}/${logger}.json" encoding="utf-8">
		  <layout xsi:type="JsonLayout" includeEventProperties ="false" excludeProperties ="Comma-separated list (string)">
			  <attribute name="time" layout="${date}"/>
			  <attribute name="來源" layout="${callsite}"/>
			  <attribute name="行數" layout="${callsite-linenumber}"/>
			  <!--<attribute name="錯誤訊息" layout ="${onexception:EXCEPTION OCCURRED\:${exception:format=tostring}}"/>-->
			  <attribute name="level" layout="${level:upperCase=true}"/>
			  <attribute name="message" layout="${message}"/>
			  <attribute name="logger" layout="${logger:shortName=true}"/>
		  </layout>
	  </target>
	  
  </targets>

  <rules>

	  <logger name="myLogger" minlevel="Trace" writeTo="myLoggerTarget" />

  </rules>
</nlog>